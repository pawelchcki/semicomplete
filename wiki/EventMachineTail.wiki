#summary File tailing with EventMachine

= Introduction =

== Why? ==

For [http://code.google.com/p/logstash/ logstash], the log agents were
event-driven using EventMachine. The log agents mainly get their data from
logfiles. To that end, we needed a way to treat log files as a stream.

There's a ruby gem 'file-tail' that implements tailing, but not in an
event-driven way.

= Implementation Details = 

== EOF Handling ==

When we are at the end of file, we rely on EventMachine::FileWatch to notify us
when the file changes. On Linux this uses inotify and on OS X and FreeBSD will
use kqueue to get event-driven notifications of file.

== File truncation ==

If the file length ever shortens, we assume this means the file was truncated.
When this happens, we seek to the beginning of the file and continue reading.

== File rotation ==

If we notice that the inode (or underlying device) has changed, we will reopen
the file by pathname. This change is generally an indication that our file has
been rotated as part of some periodic log rotation.

== Globs ==

You can also use file [http://en.wikipedia.org/wiki/Glob_(programming) glob patterns]
to select files to tail. This pattern is checked periodically to see if new
files are found. 

For example, if your java app writes to logfiles with generated filenames that
are hard to predict, you should use EventMachine::FileGlobWatch to match any
generated files as they are generated.

= Sample Code =

[http://code.google.com/p/semicomplete/source/browse/eventmachine-tail/samples/glob-tail.rb glob tailing example]
