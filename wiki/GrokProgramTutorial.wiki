#summary A tutorial covering the features of the grok program

= Hello World =

helloworld.grok:
{{{
program {
  # Tell grok to run this command
  exec "echo Hello World"

  match {
    # match anything
    pattern: ".*"

    # the reaction is what to emit on a 
    reaction: "Got: %{@LINE}"
  }
}
}}}

Output:
{{{
% grok helloworld.grok
Got: Hello World
}}}

= Specifying patterns, or %{what?} =

In grok patterns, you specify a named pattern with %{name}, where 'name' is the name of your pattern. Grok comes with a handful of patterns already defined in the [http://code.google.com/p/semicomplete/source/browse/grok/patterns/base# grok/patterns/base file].

For example, a grok match that should capture the MAC addresses from the output of ifconfig:
{{{
program {
  load-patterns: "patterns/base"
  exec "ifconfig"

  match {
    pattern: "%{IP}"
    reaction: "Found: %{IP}"
  }
}
}}}

The output looks like this:
{{{
% grok samples/ifconfig.grok
Found: 192.168.0.97
Found: 127.0.0.1
Found: 192.168.250.1
Found: 192.168.251.1
}}}

The same syntax is used for specifying patterns in a match as for fetching the captured result in a reaction.

= Predicates =
You can apply predicates (additional checks) to a pattern.